<?php
/**
 * HTTP Thermostat
 * HTTP Thermostat API
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


namespace App\RESTfulAPI\Controllers;

use App\RESTfulAPI\Codegen\Controllers\HttpthermostatApiBase;
use Illuminate\Http\Request;

class HttpthermostatApi extends HttpthermostatApiBase
{
    /**
     * Constructor
     */
    public function __construct()
    {
    }

    /**
     * Operation status
     *
     * Get any thermostat info.
     *
     *
     * @return \Illuminate\Http\Response
     */
    protected function status(Request $request)
    {
        $xebug_session_start = $request->input('xebug_session_start');
        return response('How about implementing status as a GET method ?');
    }

    /**
     * Operation targetHeatingCoolingState
     *
     * Set heating/cooling state.
     *
     * @param float $state  (required)
     *
     * @return \Illuminate\Http\Response
     */
    protected function targetHeatingCoolingState(Request $request, $state)
    {
        return response('How about implementing targetHeatingCoolingState as a GET method ?');
    }

    /**
     * Operation targetRelativeHumidity
     *
     * Set target relative humidity.
     *
     * @param float $humidity  (required)
     *
     * @return \Illuminate\Http\Response
     */
    protected function targetRelativeHumidity(Request $request, $humidity)
    {
        return response('How about implementing targetRelativeHumidity as a GET method ?');
    }

    /**
     * Operation targetTemperature
     *
     * Set target temperature.
     *
     * @param float $temp  (required)
     *
     * @return \Illuminate\Http\Response
     */
    protected function targetTemperature(Request $request, $temp)
    {
        return response('How about implementing targetTemperature as a GET method ?');
    }

}
